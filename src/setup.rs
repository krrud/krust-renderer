mod camera;
mod hit;
mod material;
mod ray;
mod sphere;
mod tri;
mod trimesh;
mod utility;
mod vec3;
mod aabb;
mod bvh;
use crate::bvh::Bvh;
use crate::camera::Camera;
use crate::hit::{HitRecord, HittableList, Object, Hittable};
use crate::material::{Emits, Light, Material, Principle, Scatterable};
use crate::ray::Ray;
use crate::sphere::Sphere;
use crate::tri::Tri;
use crate::utility::{random_float, random_range, INF};
use crate::vec3::{Color, Vec3};
use crate::aabb::Aabb;
use image::Rgb32FImage;
use image::{DynamicImage, ImageBuffer, Rgb, RgbImage};
use indicatif::{ProgressBar, ProgressStyle};
use serde_json::{Result, Value};
use show_image::{create_window, ImageInfo, ImageView, WindowOptions};
use std::collections::HashMap;
use std::time::Duration;
use std::{env, fs, thread};
use std::sync::{Arc, Mutex, RwLock};
use std::mem::drop;